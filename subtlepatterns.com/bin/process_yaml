#!/usr/bin/env python

## Take a SubtlePatterns YAML file and convert it to usable Javascript

import sys
import os
import yaml
import json
from PIL import Image

import hurry.filesize

PATTERN_URL = "http://bradjasper.com/subtle-patterns-bookmarklet/patterns/"
PATTERN_DIR = "/Users/brad/Projects/SubtlePatternsBookmarklet/patterns/"

def get_image_dimensions(image):
    dim = Image.open(image).size
    return "%dx%d" % (dim[0], dim[1])

def get_image_size(image):
    return hurry.filesize.size(os.stat(image).st_size)

def transform_pattern(pattern):
    # relative path -> fully qualified path
    # we host our own patterns to lighten the burden on SubtlePatterns.com servers
    image_name = os.path.basename(pattern["image"])
    image_path = os.path.join(PATTERN_DIR, image_name)

    pattern["mirror_image"] = "%s%s" % (PATTERN_URL, image_name)

    if os.path.exists(image_path):
        pattern["image_size"] = get_image_size(image_path)
        pattern["image_dimensions"] = get_image_dimensions(image_path)

    return pattern

patterns = yaml.load(sys.stdin.read())
transformed_patterns = []
pattern_names = []
for pattern in patterns:
    if pattern["title"] not in pattern_names:
        transformed_patterns.append(transform_pattern(pattern))
        pattern_names.append(pattern["title"])

sys.stdout.write("window.SUBTLEPATTERNS = %s;" % json.dumps(transformed_patterns))
